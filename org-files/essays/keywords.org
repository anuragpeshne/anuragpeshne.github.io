#+TITLE: Keywords
#+DATE: 2016-03-30
#+OPTIONS: toc:nil num:nil creator:t author:t tex:nil date:t timestamp:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/style.css" />
#+HTML_HEAD: <link href='https://fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css'>
#+HTML_HEAD: <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>
#+FILETAGS:  :keywords:programming-languges:

#+INCLUDE: "../../assets/ga.org"
#+HTML: <div id="draftTag">DRAFT</div>

Recently while browsing through 'answer' list [[https://quora.com][quora.com]], I stumbled upon a
[[https://www.quora.com/About-how-many-keywords-do-most-programming-languages-contain][question]]:
#+BEGIN_VERSE
About how many keywords do most programming languages contain?
#+END_VERSE
While at first it seemed uninteresting and dry, after giving it a thought,
the idea of finding number of keywords in languages seemed fun to me. And so began
my mini adventure of determining arithmetic mean of number of keywords in programming
languages.

** Word Count
   The first thought that came to my mind was to get a file of keywords and pass
   it to `wc -w` and get the word count. And to get such a file, all I needed was
   to get the syntax highlighting scripts for any of the text editor.
*** TODO UltraEdit repo
*** TODO Cleaning files
**** TODO using `sed`
**** TODO using `python`
*** TODO Calculating the mean
*** TODO Result
