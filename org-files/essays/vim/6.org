#+TITLE: Vim: .vimrc
#+DATE: 2017-06-5
#+OPTIONS: toc:nil num:nil creator:t author:t tex:t timestamp:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../../css/style.css" />
#+HTML_HEAD: <link href='https://fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css'>
#+FILETAGS:  :vim:tutorial:vimrc:configuration:

#+INCLUDE: "../../../assets/ga.org"

This is part 6 of a series of tutorial to Vim. You can read [[./5.org][Part 5 here]].

* ~*~
  Before we get to our main topic, let me show you one more humble, but tremendously
  useful command. Hit ~*~ to search the word currently under cursor and jump to
  its next occurrence. This is, as I said previously, is tremendously useful[fn:0],
  to find where a variable/function is used/called. The analogous command to search
  backwards is ~#~.

* DNA
  Like your DNA, which defines you, your appearance, hair color, eye color, strength
  and weakness; ~.vimrc~ defines your Vim's appearance, behavior, strength and weakness.
  /Your/ Vim will be very different from /my/ Vim and not just in outer superficial
  appearance, like color of cursor or background, but also how it responds. For
  example, you can, if you want, make your Vim to not respond to arrow keys to force
  yourself to use 'h, k, j, l'.

  You can save your ~.vimrc~ somewhere accessible from everywhere, like say Github,
  and when you want to setup new system, or a remote server, you can simply drop
  your ~.vimrc~ in home folder (=~=) and make yourself home.

** Bells and Whistles
   Let's start with configuring how Vim looks. Vim supports color schemes, which can
   be set using command ~:colorscheme <scheme name>~, or via ~.vimrc~. There are some
   basic colorschemes preinstalled, but you can add more. Vim colorschemes are
   nothing more than a ~.vim~ file, like Vim plugins. Download them and place them
   in =~/.vim/colors/=. Once files are placed, you can use the command ~:colorscheme~
   to enable it. You can directly search for your favorite color scheme or browse
   them [[http://www.vim.org/scripts/script_search_results.php?keywords=&script_type=color+scheme&order_by=rating&direction=descending&search=search][here]] or [[http://vimcolors.com][here]].

   If you don't like something with a colorscheme, you are encouraged to open it
   up, and play around with it. And then, contribute it back to the main repository.
   If you didn't like something, chances are there are many other who didn't like it
   too.

** Plugins
   Vim has amazing ecosystem of plugins. Plugins for Vim can be created using VimL-
   Vim's own scripting language and there is support for Python, Lua too. It is highly
   likely that your favorite feature, like the folder tree view in Sublime[fn:1],
   automatic syntax checker[fn:2]; are available in Vim via plugins.

*** Plugin to manage Plugins
    There are plugins which makes installing, updating and removing plugins very easy.
    I personally like [[https://github.com/VundleVim/Vundle.vim][Vundle]], but there are other plugins managers too. You can find
    how to install at the home page, but to describe it in a line, you have to install
    Vundle by cloning the repository into =~/.vim/bundle/Vundle.vim=, add plugin to
    ~.vimrc~ and say ~:PluginInstall~.

** My ~.vimrc~

[fn:0] if you were to read this webpage in Vim, you could have used ~*~ to jump back to previous occurrence of 'tremendously', since ~*~ wraps around.
